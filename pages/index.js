import Head from "next/head";
import Image from "next/image";
import s from "../styles/Home.module.scss";
import axios from "axios";
import { useState } from "react";

export default function Home() {
  const [prompt, setPrompt] = useState("");
  const [size, setSize] = useState("small");
  const [image, setImage] = useState("");
  const [error, setError] = useState("");
  const [buttonText, setButtonText] = useState("Generate");

  const handleSubmit = async (e) => {
    e.preventDefault();
    setButtonText("Generating...");
    try {
      const { data } = await axios.post(
        "https://alpha-image.vercel.app/api/generate",
        {
          prompt,
          size,
        }
      );
      // console.log(prompt, size);
      // console.log(data);
      setImage(data.data);
      setButtonText("Generate");
    } catch (error) {
      setError("Could not generate image.");
      setButtonText("Generate");
    }
  };
  return (
    <div className={s.home}>
      <Head>
        <title>Text to Image | Generate Image From Text</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <nav>
          <h1>Text To Image Generator</h1>
        </nav>
        <div className={s.form}>
          <form onSubmit={handleSubmit}>
            <input
              type="text"
              placeholder="Enter Description...  ( at least 3 words )"
              onChange={(e) => setPrompt(e.target.value)}
            />
            <select
              name="size"
              id="size"
              onChange={(e) => setSize(e.target.value)}
            >
              <option value="small">Small</option>
              <option value="medium">Medium</option>
              <option value="large">Large</option>
            </select>
            <button
              disabled={prompt.length < 3}
              style={{ opacity: prompt.length < 3 ? 0.5 : 1 }}
              type="submit"
            >
              {buttonText}
            </button>
          </form>
        </div>
        {error && <h2>{error}</h2>}
        {image && (
          <div className={s.image}>
            <img src={image} alt="" />
          </div>
        )}
      </main>
    </div>
  );
}
